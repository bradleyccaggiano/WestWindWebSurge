<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>